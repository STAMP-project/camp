// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package eu.stamp.camp.samples.testman.web;

import eu.stamp.camp.samples.testman.domain.TC;
import eu.stamp.camp.samples.testman.domain.TCExecution;
import eu.stamp.camp.samples.testman.web.ApplicationConversionServiceFactoryBean;
import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    declare @type: ApplicationConversionServiceFactoryBean: @Configurable;
    
    public Converter<TC, String> ApplicationConversionServiceFactoryBean.getTCToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<eu.stamp.camp.samples.testman.domain.TC, java.lang.String>() {
            public String convert(TC tC) {
                return new StringBuilder().append(tC.getTcId()).append(' ').append(tC.getSummary()).append(' ').append(tC.getSteps()).append(' ').append(tC.getExpectedResult()).toString();
            }
        };
    }
    
    public Converter<Long, TC> ApplicationConversionServiceFactoryBean.getIdToTCConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, eu.stamp.camp.samples.testman.domain.TC>() {
            public eu.stamp.camp.samples.testman.domain.TC convert(java.lang.Long id) {
                return TC.findTC(id);
            }
        };
    }
    
    public Converter<String, TC> ApplicationConversionServiceFactoryBean.getStringToTCConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, eu.stamp.camp.samples.testman.domain.TC>() {
            public eu.stamp.camp.samples.testman.domain.TC convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TC.class);
            }
        };
    }
    
    public Converter<TCExecution, String> ApplicationConversionServiceFactoryBean.getTCExecutionToStringConverter() {
        return new org.springframework.core.convert.converter.Converter<eu.stamp.camp.samples.testman.domain.TCExecution, java.lang.String>() {
            public String convert(TCExecution tCExecution) {
                return new StringBuilder().append(tCExecution.getExecutedOn()).append(' ').append(tCExecution.getTester()).toString();
            }
        };
    }
    
    public Converter<Long, TCExecution> ApplicationConversionServiceFactoryBean.getIdToTCExecutionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.Long, eu.stamp.camp.samples.testman.domain.TCExecution>() {
            public eu.stamp.camp.samples.testman.domain.TCExecution convert(java.lang.Long id) {
                return TCExecution.findTCExecution(id);
            }
        };
    }
    
    public Converter<String, TCExecution> ApplicationConversionServiceFactoryBean.getStringToTCExecutionConverter() {
        return new org.springframework.core.convert.converter.Converter<java.lang.String, eu.stamp.camp.samples.testman.domain.TCExecution>() {
            public eu.stamp.camp.samples.testman.domain.TCExecution convert(String id) {
                return getObject().convert(getObject().convert(id, Long.class), TCExecution.class);
            }
        };
    }
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(getTCToStringConverter());
        registry.addConverter(getIdToTCConverter());
        registry.addConverter(getStringToTCConverter());
        registry.addConverter(getTCExecutionToStringConverter());
        registry.addConverter(getIdToTCExecutionConverter());
        registry.addConverter(getStringToTCExecutionConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
}
