#
# CAMP
#
# Copyright (C) 2017, 2018 SINTEF Digital
# All rights reserved.
#
# This software may be modified and distributed under the terms
# of the MIT license.  See the LICENSE file for details.
#



from os import makedirs
from os.path import isfile, isdir, join, exists

from shutil import rmtree, copytree

from time import sleep

from unittest import TestCase, skip

from camp.run import Runner
from camp.core import Camp
from camp.stacks.find import Finder as SFinder
from camp.stacks.build import Builder as SBuilder
from camp.orchestrations.find import Finder as OFinder
from camp.orchestrations.build import Builder as OBuilder
from camp.realize.engine import RealizationEngine



@skip("CityGo case under development")
class GenerateCityGoTests(TestCase):


    @classmethod
    def setUpClass(cls):
        if isdir(cls.WORKING_DIRECTORY):
            rmtree(cls.WORKING_DIRECTORY)
        copytree(cls.XWIKI_SOURCES, cls.WORKING_DIRECTORY)



    WORKING_DIRECTORY = "temp/atos"

    XWIKI_SOURCES = "samples/stamp/atos"


    def test_that_camp_generates_files(self):
        self.invoke_camp_generate()
        
        self.verify_generated_files()


    def invoke_camp_generate(self):
        runner = Runner(Camp(SFinder(),
                             SBuilder(),
                             OFinder(),
                             OBuilder(),
                             RealizationEngine()))
        runner.start(["generate", "-d", self.WORKING_DIRECTORY])
        sleep(1)

    def verify_generated_files(self):
        for each in self.EXPECTED_GENERATED_FILES:
            path = join(self.WORKING_DIRECTORY, each)
            self.assertTrue(exists(path),
                            "Expecting file '%s', but could not find it!" % path)



    EXPECTED_GENERATED_FILES = [
        # Generated by the stacks finder
        "out/genimages.yml",
        "out/ampimages.yml",
        # Generated by the stack builder

        # Generated by the orchestration finder
        "out/ampcompose.yml",

        # Generated by the orchestration builder
    ]
